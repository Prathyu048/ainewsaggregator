{"ast":null,"code":"var _jsxFileName = \"D:\\\\cursor ai\\\\smart assistance for productivity\\\\client\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NewsGrid from './NewsGrid';\nimport TopicNav from './TopicNav';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState({\n    region: 'global',\n    topic: null,\n    subtopic: null\n  });\n  useEffect(() => {\n    fetchNews();\n  }, [filters]);\n  const fetchNews = async () => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams(filters);\n      const response = await fetch(`/api/news?${params}`);\n      const data = await response.json();\n      setNews(data);\n    } catch (error) {\n      console.error('Error fetching news:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(TopicNav, {\n      selectedRegion: filters.region,\n      selectedTopic: filters.topic,\n      selectedSubtopic: filters.subtopic,\n      onFilterChange: setFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(NewsGrid, {\n        articles: news\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"LvTe1rEFBOnI6zvdT91a6cVYQbU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","NewsGrid","TopicNav","jsxDEV","_jsxDEV","Dashboard","_s","news","setNews","loading","setLoading","filters","setFilters","region","topic","subtopic","fetchNews","params","URLSearchParams","response","fetch","data","json","error","console","className","children","selectedRegion","selectedTopic","selectedSubtopic","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","articles","_c","$RefreshReg$"],"sources":["D:/cursor ai/smart assistance for productivity/client/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport NewsGrid from './NewsGrid';\r\nimport TopicNav from './TopicNav';\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  const [news, setNews] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filters, setFilters] = useState({\r\n    region: 'global',\r\n    topic: null,\r\n    subtopic: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchNews();\r\n  }, [filters]);\r\n\r\n  const fetchNews = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const params = new URLSearchParams(filters);\r\n      const response = await fetch(`/api/news?${params}`);\r\n      const data = await response.json();\r\n      setNews(data);\r\n    } catch (error) {\r\n      console.error('Error fetching news:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <TopicNav \r\n        selectedRegion={filters.region}\r\n        selectedTopic={filters.topic}\r\n        selectedSubtopic={filters.subtopic}\r\n        onFilterChange={setFilters}\r\n      />\r\n      \r\n      <div className=\"content\">\r\n        {loading ? (\r\n          <div className=\"loader\">Loading...</div>\r\n        ) : (\r\n          <NewsGrid articles={news} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC;IACrCc,MAAM,EAAE,QAAQ;IAChBC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACdgB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,MAAMK,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACFN,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMO,MAAM,GAAG,IAAIC,eAAe,CAACP,OAAO,CAAC;MAC3C,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAaH,MAAM,EAAE,CAAC;MACnD,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCd,OAAO,CAACa,IAAI,CAAC;IACf,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACRb,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBtB,OAAA,CAACF,QAAQ;MACPyB,cAAc,EAAEhB,OAAO,CAACE,MAAO;MAC/Be,aAAa,EAAEjB,OAAO,CAACG,KAAM;MAC7Be,gBAAgB,EAAElB,OAAO,CAACI,QAAS;MACnCe,cAAc,EAAElB;IAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAEF9B,OAAA;MAAKqB,SAAS,EAAC,SAAS;MAAAC,QAAA,EACrBjB,OAAO,gBACNL,OAAA;QAAKqB,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAExC9B,OAAA,CAACH,QAAQ;QAACkC,QAAQ,EAAE5B;MAAK;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC5B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA7CID,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}