{"ast":null,"code":"var _jsxFileName = \"D:\\\\cursor ai\\\\smart assistance for productivity\\\\client\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\nimport NewsGrid from './NewsGrid';\nimport TopicSidebar from './TopicSidebar';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedTopic, setSelectedTopic] = useState('global-politics');\n  const [language, setLanguage] = useState('en');\n  useEffect(() => {\n    const fetchNews = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`/api/news?topic=${selectedTopic}&language=${language}`);\n        setNews(response.data);\n      } catch (error) {\n        console.error('Error fetching news:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNews();\n  }, [selectedTopic, language]);\n  const handleTopicSelect = topic => {\n    setSelectedTopic(topic);\n    setLoading(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"AI News Aggregator - \", selectedTopic.split('-').map(w => w.charAt(0).toUpperCase() + w.slice(1)).join(' ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: `Latest news on ${selectedTopic.replace('-', ' ')}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-layout\",\n        children: [/*#__PURE__*/_jsxDEV(TopicSidebar, {\n          onTopicSelect: handleTopicSelect,\n          selectedTopic: selectedTopic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [selectedTopic.split('-').map(w => w.charAt(0).toUpperCase() + w.slice(1)).join(' '), \" News\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: language,\n              onChange: e => setLanguage(e.target.value),\n              className: \"language-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"en\",\n                children: \"English\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"hi\",\n                children: \"\\u0939\\u093F\\u0902\\u0926\\u0940\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loader\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(NewsGrid, {\n            articles: news\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"KpSRMnbtYnWmUJPXezBVKP5syJc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Helmet","axios","NewsGrid","TopicSidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","news","setNews","loading","setLoading","selectedTopic","setSelectedTopic","language","setLanguage","fetchNews","response","get","data","error","console","handleTopicSelect","topic","children","split","map","w","charAt","toUpperCase","slice","join","fileName","_jsxFileName","lineNumber","columnNumber","name","content","replace","className","onTopicSelect","value","onChange","e","target","articles","_c","$RefreshReg$"],"sources":["D:/cursor ai/smart assistance for productivity/client/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\nimport NewsGrid from './NewsGrid';\nimport TopicSidebar from './TopicSidebar';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedTopic, setSelectedTopic] = useState('global-politics');\n  const [language, setLanguage] = useState('en');\n\n  useEffect(() => {\n    const fetchNews = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`/api/news?topic=${selectedTopic}&language=${language}`);\n        setNews(response.data);\n      } catch (error) {\n        console.error('Error fetching news:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchNews();\n  }, [selectedTopic, language]);\n\n  const handleTopicSelect = (topic) => {\n    setSelectedTopic(topic);\n    setLoading(true);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>AI News Aggregator - {selectedTopic.split('-').map(w => w.charAt(0).toUpperCase() + w.slice(1)).join(' ')}</title>\n        <meta name=\"description\" content={`Latest news on ${selectedTopic.replace('-', ' ')}`} />\n      </Helmet>\n\n      <div className=\"dashboard\">\n        <div className=\"dashboard-layout\">\n          <TopicSidebar \n            onTopicSelect={handleTopicSelect}\n            selectedTopic={selectedTopic}\n          />\n          \n          <div className=\"main-content\">\n            <div className=\"dashboard-header\">\n              <h1>\n                {selectedTopic.split('-').map(w => w.charAt(0).toUpperCase() + w.slice(1)).join(' ')} News\n              </h1>\n              <select\n                value={language}\n                onChange={(e) => setLanguage(e.target.value)}\n                className=\"language-select\"\n              >\n                <option value=\"en\">English</option>\n                <option value=\"hi\">हिंदी</option>\n              </select>\n            </div>\n\n            {loading ? (\n              <div className=\"loader\">Loading...</div>\n            ) : (\n              <NewsGrid articles={news} />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,cAAc;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,iBAAiB,CAAC;EACrE,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFL,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMM,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,mBAAmBN,aAAa,aAAaE,QAAQ,EAAE,CAAC;QACzFL,OAAO,CAACQ,QAAQ,CAACE,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,SAAS;QACRT,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,aAAa,EAAEE,QAAQ,CAAC,CAAC;EAE7B,MAAMQ,iBAAiB,GAAIC,KAAK,IAAK;IACnCV,gBAAgB,CAACU,KAAK,CAAC;IACvBZ,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACErB,OAAA,CAACL,MAAM;MAAA0B,QAAA,gBACLrB,OAAA;QAAAqB,QAAA,GAAO,uBAAqB,EAACZ,aAAa,CAACa,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzHhC,OAAA;QAAMiC,IAAI,EAAC,aAAa;QAACC,OAAO,EAAE,kBAAkBzB,aAAa,CAAC0B,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;MAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC,eAEThC,OAAA;MAAKoC,SAAS,EAAC,WAAW;MAAAf,QAAA,eACxBrB,OAAA;QAAKoC,SAAS,EAAC,kBAAkB;QAAAf,QAAA,gBAC/BrB,OAAA,CAACF,YAAY;UACXuC,aAAa,EAAElB,iBAAkB;UACjCV,aAAa,EAAEA;QAAc;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eAEFhC,OAAA;UAAKoC,SAAS,EAAC,cAAc;UAAAf,QAAA,gBAC3BrB,OAAA;YAAKoC,SAAS,EAAC,kBAAkB;YAAAf,QAAA,gBAC/BrB,OAAA;cAAAqB,QAAA,GACGZ,aAAa,CAACa,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,EAAC,OACvF;YAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACLhC,OAAA;cACEsC,KAAK,EAAE3B,QAAS;cAChB4B,QAAQ,EAAGC,CAAC,IAAK5B,WAAW,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cAC7CF,SAAS,EAAC,iBAAiB;cAAAf,QAAA,gBAE3BrB,OAAA;gBAAQsC,KAAK,EAAC,IAAI;gBAAAjB,QAAA,EAAC;cAAO;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACnChC,OAAA;gBAAQsC,KAAK,EAAC,IAAI;gBAAAjB,QAAA,EAAC;cAAK;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,EAELzB,OAAO,gBACNP,OAAA;YAAKoC,SAAS,EAAC,QAAQ;YAAAf,QAAA,EAAC;UAAU;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,gBAExChC,OAAA,CAACH,QAAQ;YAAC6C,QAAQ,EAAErC;UAAK;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAC5B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAC5B,EAAA,CAlEID,SAAS;AAAAwC,EAAA,GAATxC,SAAS;AAoEf,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}