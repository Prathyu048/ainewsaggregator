{"ast":null,"code":"var _jsxFileName = \"D:\\\\cursor ai\\\\smart assistance for productivity\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Dashboard from './components/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedLanguage, setSelectedLanguage] = useState('en');\n  const handleLanguageSelect = lang => {\n    setSelectedLanguage(lang);\n    // You can add any additional language-related logic here\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        onLanguageSelect: handleLanguageSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n        selectedLanguage: selectedLanguage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"MDN7Z+bybCf3bDL6K8oFaLteZzo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Navbar","Dashboard","jsxDEV","_jsxDEV","App","_s","selectedLanguage","setSelectedLanguage","handleLanguageSelect","lang","children","className","onLanguageSelect","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/cursor ai/smart assistance for productivity/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Dashboard from './components/Dashboard';\r\n\r\nconst App = () => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState('en');\r\n\r\n  const handleLanguageSelect = (lang) => {\r\n    setSelectedLanguage(lang);\r\n    // You can add any additional language-related logic here\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <Navbar onLanguageSelect={handleLanguageSelect} />\r\n        <Dashboard selectedLanguage={selectedLanguage} />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,QAAQ,kBAAkB;AAC1D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAMW,oBAAoB,GAAIC,IAAI,IAAK;IACrCF,mBAAmB,CAACE,IAAI,CAAC;IACzB;EACF,CAAC;EAED,oBACEN,OAAA,CAACJ,MAAM;IAAAW,QAAA,eACLP,OAAA;MAAKQ,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBP,OAAA,CAACH,MAAM;QAACY,gBAAgB,EAAEJ;MAAqB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDb,OAAA,CAACF,SAAS;QAACK,gBAAgB,EAAEA;MAAiB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACX,EAAA,CAhBID,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAkBT,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}