{"ast":null,"code":"var _jsxFileName = \"D:\\\\cursor ai\\\\smart assistance for productivity\\\\client\\\\src\\\\components\\\\NewsFetcher.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsFetcher = ({\n  selectedTopic,\n  language\n}) => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchNews = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(`https://newsapi.org/v2/top-headlines?category=${selectedTopic}&language=${language}&apiKey=YOUR_NEWS_API_KEY`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch news');\n        }\n        const data = await response.json();\n        setArticles(data.articles);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNews();\n  }, [selectedTopic, language]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Latest News on \", selectedTopic]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-grid\",\n      children: articles.map((article, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-card\",\n        children: [article.urlToImage && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: article.urlToImage,\n          alt: article.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: article.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: article.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: article.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Read More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsFetcher, \"trxyYN9tEqpANqhYg3rghnSmKa8=\");\n_c = NewsFetcher;\nexport default NewsFetcher;\nvar _c;\n$RefreshReg$(_c, \"NewsFetcher\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NewsFetcher","selectedTopic","language","_s","articles","setArticles","loading","setLoading","error","setError","fetchNews","response","fetch","ok","Error","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","article","index","urlToImage","src","alt","title","description","href","url","target","rel","_c","$RefreshReg$"],"sources":["D:/cursor ai/smart assistance for productivity/client/src/components/NewsFetcher.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst NewsFetcher = ({ selectedTopic, language }) => {\r\n  const [articles, setArticles] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchNews = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await fetch(`https://newsapi.org/v2/top-headlines?category=${selectedTopic}&language=${language}&apiKey=YOUR_NEWS_API_KEY`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch news');\r\n        }\r\n        const data = await response.json();\r\n        setArticles(data.articles);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchNews();\r\n  }, [selectedTopic, language]);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Latest News on {selectedTopic}</h1>\r\n      <div className=\"news-grid\">\r\n        {articles.map((article, index) => (\r\n          <div key={index} className=\"news-card\">\r\n            {article.urlToImage && (\r\n              <img src={article.urlToImage} alt={article.title} />\r\n            )}\r\n            <h2>{article.title}</h2>\r\n            <p>{article.description}</p>\r\n            <a href={article.url} target=\"_blank\" rel=\"noopener noreferrer\">Read More</a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsFetcher; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}