{"ast":null,"code":"var _process$env$REACT_AP;\nimport axios from 'axios';\nconst API_URL = (_process$env$REACT_AP = process.env.REACT_APP_API_URL) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : 'http://localhost:5000/';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true // Enables cookies if authentication is required\n});\nexport const fetchArticles = async params => {\n  try {\n    const response = await api.get('/articles', {\n      params\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2, _error$response2$data;\n    console.error('Error fetching articles:', (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw new Error((error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch articles');\n  }\n};\nexport const trackArticleView = async articleId => {\n  try {\n    const response = await api.post(`/articles/${articleId}/view`);\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error('Error tracking article view:', (error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    return {\n      success: false,\n      message: 'Failed to track article view'\n    };\n  }\n};\nexport const shareArticle = async (articleId, platform) => {\n  try {\n    const response = await api.post(`/articles/${articleId}/share`, {\n      platform\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    console.error('Error tracking share:', (error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n    return {\n      success: false,\n      message: 'Failed to share article'\n    };\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","_process$env$REACT_AP","process","env","REACT_APP_API_URL","api","create","baseURL","headers","withCredentials","fetchArticles","params","response","get","data","error","_error$response","_error$response2","_error$response2$data","console","message","Error","trackArticleView","articleId","post","_error$response3","success","shareArticle","platform","_error$response4"],"sources":["D:/cursor ai/smart assistance for productivity/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL ?? 'http://localhost:5000/';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  withCredentials: true, // Enables cookies if authentication is required\r\n});\r\n\r\nexport const fetchArticles = async (params) => {\r\n  try {\r\n    const response = await api.get('/articles', { params });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching articles:', error?.response?.data || error.message);\r\n    throw new Error(error?.response?.data?.message || 'Failed to fetch articles');\r\n  }\r\n};\r\n\r\nexport const trackArticleView = async (articleId) => {\r\n  try {\r\n    const response = await api.post(`/articles/${articleId}/view`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error tracking article view:', error?.response?.data || error.message);\r\n    return { success: false, message: 'Failed to track article view' };\r\n  }\r\n};\r\n\r\nexport const shareArticle = async (articleId, platform) => {\r\n  try {\r\n    const response = await api.post(`/articles/${articleId}/share`, { platform });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error tracking share:', error?.response?.data || error.message);\r\n    return { success: false, message: 'Failed to share article' };\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,IAAAC,qBAAA,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,cAAAH,qBAAA,cAAAA,qBAAA,GAAI,wBAAwB;AAEzE,MAAMI,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;EACvBC,OAAO,EAAEP,OAAO;EAChBQ,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,eAAe,EAAE,IAAI,CAAE;AACzB,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAG,MAAOC,MAAM,IAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,WAAW,EAAE;MAAEF;IAAO,CAAC,CAAC;IACvD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACdC,OAAO,CAACJ,KAAK,CAAC,0BAA0B,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAC,eAAA,GAALD,KAAK,CAAEH,QAAQ,cAAAI,eAAA,uBAAfA,eAAA,CAAiBF,IAAI,KAAIC,KAAK,CAACK,OAAO,CAAC;IACjF,MAAM,IAAIC,KAAK,CAAC,CAAAN,KAAK,aAALA,KAAK,wBAAAE,gBAAA,GAALF,KAAK,CAAEH,QAAQ,cAAAK,gBAAA,wBAAAC,qBAAA,GAAfD,gBAAA,CAAiBH,IAAI,cAAAI,qBAAA,uBAArBA,qBAAA,CAAuBE,OAAO,KAAI,0BAA0B,CAAC;EAC/E;AACF,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAOC,SAAS,IAAK;EACnD,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMP,GAAG,CAACmB,IAAI,CAAC,aAAaD,SAAS,OAAO,CAAC;IAC9D,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAU,gBAAA;IACdN,OAAO,CAACJ,KAAK,CAAC,8BAA8B,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAU,gBAAA,GAALV,KAAK,CAAEH,QAAQ,cAAAa,gBAAA,uBAAfA,gBAAA,CAAiBX,IAAI,KAAIC,KAAK,CAACK,OAAO,CAAC;IACrF,OAAO;MAAEM,OAAO,EAAE,KAAK;MAAEN,OAAO,EAAE;IAA+B,CAAC;EACpE;AACF,CAAC;AAED,OAAO,MAAMO,YAAY,GAAG,MAAAA,CAAOJ,SAAS,EAAEK,QAAQ,KAAK;EACzD,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMP,GAAG,CAACmB,IAAI,CAAC,aAAaD,SAAS,QAAQ,EAAE;MAAEK;IAAS,CAAC,CAAC;IAC7E,OAAOhB,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAc,gBAAA;IACdV,OAAO,CAACJ,KAAK,CAAC,uBAAuB,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAc,gBAAA,GAALd,KAAK,CAAEH,QAAQ,cAAAiB,gBAAA,uBAAfA,gBAAA,CAAiBf,IAAI,KAAIC,KAAK,CAACK,OAAO,CAAC;IAC9E,OAAO;MAAEM,OAAO,EAAE,KAAK;MAAEN,OAAO,EAAE;IAA0B,CAAC;EAC/D;AACF,CAAC;AAED,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}