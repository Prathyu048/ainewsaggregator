{"ast":null,"code":"var _jsxFileName = \"D:\\\\cursor ai\\\\smart assistance for productivity\\\\client\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NewsGrid from './NewsGrid';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [activeCategory, setActiveCategory] = useState('all');\n  const [language, setLanguage] = useState('en');\n  const categories = ['all', 'politics', 'technology', 'sports', 'business'];\n  useEffect(() => {\n    fetchNews();\n  }, [activeCategory, language]);\n  const fetchNews = async () => {\n    try {\n      setLoading(true);\n      // Simulated data for now - replace with actual API call\n      const mockData = [{\n        _id: '1',\n        title: 'Sample News Article',\n        summary: 'This is a sample news article summary...',\n        category: 'technology',\n        sentiment: 'positive',\n        confidence: 0.85,\n        source: 'Tech News',\n        publishedAt: new Date()\n      }];\n      setNews(mockData);\n    } catch (error) {\n      console.error('Error fetching news:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI News Aggregator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-filters\",\n          children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `category-btn ${activeCategory === category ? 'active' : ''}`,\n            onClick: () => setActiveCategory(category),\n            children: category.charAt(0).toUpperCase() + category.slice(1)\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: language,\n          onChange: e => setLanguage(e.target.value),\n          className: \"language-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"en\",\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hi\",\n            children: \"Hindi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(NewsGrid, {\n      articles: news\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"h0GJjHkNDkwySslBKgxmvbmAZlM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","NewsGrid","jsxDEV","_jsxDEV","Dashboard","_s","news","setNews","loading","setLoading","activeCategory","setActiveCategory","language","setLanguage","categories","fetchNews","mockData","_id","title","summary","category","sentiment","confidence","source","publishedAt","Date","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","charAt","toUpperCase","slice","value","onChange","e","target","articles","_c","$RefreshReg$"],"sources":["D:/cursor ai/smart assistance for productivity/client/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport NewsGrid from './NewsGrid';\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  const [news, setNews] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeCategory, setActiveCategory] = useState('all');\r\n  const [language, setLanguage] = useState('en');\r\n\r\n  const categories = [\r\n    'all', 'politics', 'technology', 'sports', 'business'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchNews();\r\n  }, [activeCategory, language]);\r\n\r\n  const fetchNews = async () => {\r\n    try {\r\n      setLoading(true);\r\n      // Simulated data for now - replace with actual API call\r\n      const mockData = [\r\n        {\r\n          _id: '1',\r\n          title: 'Sample News Article',\r\n          summary: 'This is a sample news article summary...',\r\n          category: 'technology',\r\n          sentiment: 'positive',\r\n          confidence: 0.85,\r\n          source: 'Tech News',\r\n          publishedAt: new Date(),\r\n        }\r\n      ];\r\n      setNews(mockData);\r\n    } catch (error) {\r\n      console.error('Error fetching news:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <h1>AI News Aggregator</h1>\r\n        <div className=\"controls\">\r\n          <div className=\"category-filters\">\r\n            {categories.map(category => (\r\n              <button\r\n                key={category}\r\n                className={`category-btn ${activeCategory === category ? 'active' : ''}`}\r\n                onClick={() => setActiveCategory(category)}\r\n              >\r\n                {category.charAt(0).toUpperCase() + category.slice(1)}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <select\r\n            value={language}\r\n            onChange={(e) => setLanguage(e.target.value)}\r\n            className=\"language-select\"\r\n          >\r\n            <option value=\"en\">English</option>\r\n            <option value=\"hi\">Hindi</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div className=\"loader\">Loading...</div>\r\n      ) : (\r\n        <NewsGrid articles={news} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}