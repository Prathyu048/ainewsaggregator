{"ast":null,"code":"import axios from 'axios';\nconst isDevelopment = process.env.NODE_ENV === 'development';\nconst api = axios.create({\n  baseURL: isDevelopment ? '/api' : process.env.REACT_APP_API_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  console.error('API Error:', error);\n  if (error.response) {\n    // Server responded with error\n    console.error('Error response:', error.response.data);\n  } else if (error.request) {\n    // Request made but no response\n    console.error('No response received');\n    // Add retry logic\n    if (!error.config.__retryCount) {\n      error.config.__retryCount = 0;\n    }\n    error.config.__retryCount += 1;\n    if (error.config.__retryCount <= 2) {\n      return new Promise(resolve => setTimeout(resolve, 1000)).then(() => axios(error.config));\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Add request interceptor for logging\napi.interceptors.request.use(config => {\n  if (isDevelopment) {\n    console.log('Making request to:', config.url);\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","isDevelopment","process","env","NODE_ENV","api","create","baseURL","REACT_APP_API_URL","timeout","headers","interceptors","response","use","error","console","data","request","config","__retryCount","Promise","resolve","setTimeout","then","reject","log","url"],"sources":["D:/cursor ai/smart assistance for productivity/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nconst api = axios.create({\r\n  baseURL: isDevelopment ? '/api' : process.env.REACT_APP_API_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Add response interceptor for error handling\r\napi.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    console.error('API Error:', error);\r\n    if (error.response) {\r\n      // Server responded with error\r\n      console.error('Error response:', error.response.data);\r\n    } else if (error.request) {\r\n      // Request made but no response\r\n      console.error('No response received');\r\n      // Add retry logic\r\n      if (!error.config.__retryCount) {\r\n        error.config.__retryCount = 0;\r\n      }\r\n      error.config.__retryCount += 1;\r\n      if (error.config.__retryCount <= 2) {\r\n        return new Promise(resolve => setTimeout(resolve, 1000))\r\n          .then(() => axios(error.config));\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add request interceptor for logging\r\napi.interceptors.request.use(\r\n  config => {\r\n    if (isDevelopment) {\r\n      console.log('Making request to:', config.url);\r\n    }\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa;AAE5D,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,aAAa,GAAG,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACK,iBAAiB;EAC/DC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACM,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC3BD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAClC,IAAIA,KAAK,CAACF,QAAQ,EAAE;IAClB;IACAG,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACF,QAAQ,CAACI,IAAI,CAAC;EACvD,CAAC,MAAM,IAAIF,KAAK,CAACG,OAAO,EAAE;IACxB;IACAF,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAC;IACrC;IACA,IAAI,CAACA,KAAK,CAACI,MAAM,CAACC,YAAY,EAAE;MAC9BL,KAAK,CAACI,MAAM,CAACC,YAAY,GAAG,CAAC;IAC/B;IACAL,KAAK,CAACI,MAAM,CAACC,YAAY,IAAI,CAAC;IAC9B,IAAIL,KAAK,CAACI,MAAM,CAACC,YAAY,IAAI,CAAC,EAAE;MAClC,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC,CACrDE,IAAI,CAAC,MAAMvB,KAAK,CAACc,KAAK,CAACI,MAAM,CAAC,CAAC;IACpC;EACF;EACA,OAAOE,OAAO,CAACI,MAAM,CAACV,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAT,GAAG,CAACM,YAAY,CAACM,OAAO,CAACJ,GAAG,CAC1BK,MAAM,IAAI;EACR,IAAIjB,aAAa,EAAE;IACjBc,OAAO,CAACU,GAAG,CAAC,oBAAoB,EAAEP,MAAM,CAACQ,GAAG,CAAC;EAC/C;EACA,OAAOR,MAAM;AACf,CAAC,EACDJ,KAAK,IAAI;EACP,OAAOM,OAAO,CAACI,MAAM,CAACV,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}