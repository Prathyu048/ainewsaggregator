{"ast":null,"code":"var _jsxFileName = \"D:\\\\cursor ai\\\\smart assistance for productivity\\\\client\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NewsGrid from './NewsGrid';\nimport TopicSidebar from './TopicSidebar';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedTopic, setSelectedTopic] = useState('global');\n  const [selectedSubTopic, setSelectedSubTopic] = useState(null);\n  const [language, setLanguage] = useState('en');\n\n  // Topics structure - can be modified without changing code\n  const topics = {\n    global: {\n      name: 'Global News',\n      subtopics: ['politics', 'technology', 'economy']\n    },\n    'uttar-pradesh': {\n      name: 'Uttar Pradesh',\n      subtopics: ['lucknow', 'noida', 'kanpur']\n    }\n  };\n  useEffect(() => {\n    const getNews = async () => {\n      await fetchNews();\n    };\n    getNews();\n  }, [selectedTopic, selectedSubTopic, language]);\n  const fetchNews = async () => {\n    try {\n      setLoading(true);\n      // Mock data - replace with actual API call\n      const mockData = [{\n        _id: '1',\n        title: 'AI Revolutionizes Healthcare in Lucknow',\n        summary: 'New AI-powered diagnostic tools are being deployed across hospitals in Lucknow...',\n        category: selectedTopic,\n        subCategory: selectedSubTopic,\n        seo: {\n          keywords: ['AI', 'healthcare', 'Lucknow', 'medical technology'],\n          metaDescription: 'Discover how artificial intelligence is transforming healthcare delivery in Lucknow hospitals with new diagnostic tools.',\n          canonicalUrl: '/news/ai-healthcare-lucknow'\n        },\n        source: 'Local Tech News',\n        publishedAt: new Date(),\n        readingTime: '3 min read'\n      }];\n      setNews(mockData);\n    } catch (error) {\n      console.error('Error fetching news:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(TopicSidebar, {\n      topics: topics,\n      selectedTopic: selectedTopic,\n      selectedSubTopic: selectedSubTopic,\n      onTopicSelect: setSelectedTopic,\n      onSubTopicSelect: setSelectedSubTopic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: topics[selectedTopic].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), selectedSubTopic && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [selectedSubTopic.charAt(0).toUpperCase() + selectedSubTopic.slice(1), \" News\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: language,\n          onChange: e => setLanguage(e.target.value),\n          className: \"language-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"en\",\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hi\",\n            children: \"\\u0939\\u093F\\u0902\\u0926\\u0940\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(NewsGrid, {\n        articles: news\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"GfDahVksva850qbJNMyOwPuUkCE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","NewsGrid","TopicSidebar","jsxDEV","_jsxDEV","Dashboard","_s","news","setNews","loading","setLoading","selectedTopic","setSelectedTopic","selectedSubTopic","setSelectedSubTopic","language","setLanguage","topics","global","name","subtopics","getNews","fetchNews","mockData","_id","title","summary","category","subCategory","seo","keywords","metaDescription","canonicalUrl","source","publishedAt","Date","readingTime","error","console","className","children","onTopicSelect","onSubTopicSelect","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","value","onChange","e","target","articles","_c","$RefreshReg$"],"sources":["D:/cursor ai/smart assistance for productivity/client/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport NewsGrid from './NewsGrid';\nimport TopicSidebar from './TopicSidebar';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedTopic, setSelectedTopic] = useState('global');\n  const [selectedSubTopic, setSelectedSubTopic] = useState(null);\n  const [language, setLanguage] = useState('en');\n\n  // Topics structure - can be modified without changing code\n  const topics = {\n    global: {\n      name: 'Global News',\n      subtopics: ['politics', 'technology', 'economy']\n    },\n    'uttar-pradesh': {\n      name: 'Uttar Pradesh',\n      subtopics: ['lucknow', 'noida', 'kanpur']\n    }\n  };\n\n  useEffect(() => {\n    const getNews = async () => {\n      await fetchNews();\n    };\n    getNews();\n  }, [selectedTopic, selectedSubTopic, language]);\n\n  const fetchNews = async () => {\n    try {\n      setLoading(true);\n      // Mock data - replace with actual API call\n      const mockData = [\n        {\n          _id: '1',\n          title: 'AI Revolutionizes Healthcare in Lucknow',\n          summary: 'New AI-powered diagnostic tools are being deployed across hospitals in Lucknow...',\n          category: selectedTopic,\n          subCategory: selectedSubTopic,\n          seo: {\n            keywords: ['AI', 'healthcare', 'Lucknow', 'medical technology'],\n            metaDescription: 'Discover how artificial intelligence is transforming healthcare delivery in Lucknow hospitals with new diagnostic tools.',\n            canonicalUrl: '/news/ai-healthcare-lucknow'\n          },\n          source: 'Local Tech News',\n          publishedAt: new Date(),\n          readingTime: '3 min read'\n        }\n      ];\n      setNews(mockData);\n    } catch (error) {\n      console.error('Error fetching news:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <TopicSidebar \n        topics={topics}\n        selectedTopic={selectedTopic}\n        selectedSubTopic={selectedSubTopic}\n        onTopicSelect={setSelectedTopic}\n        onSubTopicSelect={setSelectedSubTopic}\n      />\n      \n      <main className=\"dashboard-content\">\n        <div className=\"dashboard-header\">\n          <h1>{topics[selectedTopic].name}</h1>\n          {selectedSubTopic && (\n            <h2>{selectedSubTopic.charAt(0).toUpperCase() + selectedSubTopic.slice(1)} News</h2>\n          )}\n          <select\n            value={language}\n            onChange={(e) => setLanguage(e.target.value)}\n            className=\"language-select\"\n          >\n            <option value=\"en\">English</option>\n            <option value=\"hi\">हिंदी</option>\n          </select>\n        </div>\n\n        {loading ? (\n          <div className=\"loader\">Loading...</div>\n        ) : (\n          <NewsGrid articles={news} />\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}